{"version":3,"sources":["components/Navigation.js","components/Banner.js","components/ResultCard.js","components/Results.js","components/SearchForm/SearchBtn.js","components/SearchForm/SearchInput.js","utils/API.js","pages/Search.js","components/SavedComp.js","pages/Saved.js","App.js","registerServiceWorker.js","index.js"],"names":["Navigation","className","to","Banner","ResultCard","props","href","link","target","rel","title","author","src","image","alt","description","Results","books","map","book","key","index","id","volumeInfo","authors","imageLinks","thumbnail","infoLink","generateResults","SearchBtn","React","forwardRef","ref","SearchInput","query","axios","get","Saved","useState","setBooks","inputRef","useRef","Fragment","onClick","current","value","API","then","res","data","items","catch","err","console","log","SavedComp","App","exact","path","Search","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ac5154c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../assets/navigation.css\"\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Google Books\r\n      </Link>\r\n      <div>\r\n        <ul className=\"navbar-nav nav-links\">\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              to=\"/search\"\r\n            >\r\n              Search\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/saved\">\r\n              Saved\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navigation","import React from \"react\";\r\nimport \"../assets/banner.css\";\r\n\r\nfunction Banner() {\r\n    return(\r\n\r\n        <div className=\"row\">\r\n            <div className=\"col-12 bannerBox\">\r\n                <h1>(React) Google Books Search</h1>\r\n                <h3>Search for and Save Books of Interest</h3>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Banner","import React from \"react\";\r\nimport \"../assets/resultCard.css\"\r\n\r\nfunction ResultCard(props) {\r\n    return(\r\n\r\n        <div className=\"resultCardBox\">\r\n            <button className=\"viewBtn\"><a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">View</a></button><button className=\"saveBtn\">Save</button>\r\n            <h5 className=\"cardTitle\">{props.title}</h5>\r\n            <h6 className=\"cardSum\">{props.author}</h6>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <img src={props.image} alt=\"\"></img>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                <p>{props.description}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultCard;","import React from \"react\";\r\nimport ResultCard from \"../components/ResultCard\"\r\nimport \"../assets/results.css\";\r\n\r\nfunction Results(props) {\r\n\r\n    const books = props.books\r\n\r\n    const generateResults = (book, key) => {\r\n        return (\r\n\r\n            <ResultCard \r\n                index={book.id}\r\n                author={book.volumeInfo.authors}\r\n                title={book.volumeInfo.title}\r\n                description={book.volumeInfo.description}\r\n                image={book.volumeInfo.imageLinks.thumbnail}\r\n                link={book.volumeInfo.infoLink}\r\n                key={key}\r\n            />\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    return(\r\n\r\n        <div className=\"row resultsBox\">\r\n            <div className=\"col-12\">\r\n                <h5>Results</h5>\r\n            </div>\r\n            {\r\n                books.map((book, key) => (\r\n                    generateResults(book, key)\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results","import React from \"react\";\r\n\r\nconst SearchBtn = React.forwardRef((props, ref) => {\r\n    return (\r\n        <button {...props}>Search</button>\r\n    )\r\n})\r\n\r\nexport default SearchBtn","import React from \"react\";\r\n\r\nconst SearchInput = React.forwardRef((props, ref) => {\r\n    return (\r\n        <input {...props} ref={ref}></input>\r\n    )\r\n})\r\n\r\nexport default SearchInput","import axios from \"axios\";\r\n\r\nexport default {\r\n    // Returns the result of a get request to the Google Books API\r\n    getBook: (query) => {\r\n        return axios.get(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n    },\r\n\r\n    // Performs a delete request to the server with an to identify which book is to be deleted\r\n    removeBook: (id) => {\r\n        return axios.delete(\"/api/books/\" + id).then(result => result.data);\r\n    },\r\n\r\n    // Performs a post request to the server to save the data of a book you want to save\r\n    saveBook: (book) => {\r\n        return axios.post(\"/api/books\", book).then(result => result.data);\r\n    },\r\n\r\n    // Performs a get request to the server to get all the saved books in the database\r\n    getSavedBooks: () => {\r\n        return axios.get(\"/api/books\").then(result => result.data);\r\n    }\r\n\r\n}","import React, { useRef, useState } from \"react\";\r\nimport Results from \"../components/Results\";\r\nimport SearchBtn from \"../components/SearchForm/SearchBtn\";\r\nimport SearchInput from \"../components/SearchForm/SearchInput\";\r\nimport API from \"../utils/API\";\r\n\r\nimport \"../assets/search.css\";\r\n\r\n\r\nfunction Saved() {\r\n\r\n    const [books, setBooks] = useState([]);\r\n\r\n    const inputRef = useRef(\"\");\r\n\r\n    const getBook = (query) => {\r\n        API.getBook(query)\r\n        .then(res => setBooks(res.data.items))\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n\r\n        getBook(inputRef.current.value)\r\n        console.log(books)\r\n    }\r\n\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"row searchBox\">\r\n                <div className=\"col-12\">\r\n                    <h5>Book Search</h5>\r\n                    <h6>Book:</h6>\r\n                    <SearchInput ref={inputRef}/>\r\n                    <SearchBtn onClick={handleSubmit}/>\r\n                </div>\r\n            </div>\r\n\r\n            <Results books={books}>\r\n\r\n                \r\n            \r\n            </Results>\r\n\r\n\r\n                \r\n            \r\n\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Saved;","import React from \"react\";\r\nimport ResultCard from \"./ResultCard\";\r\nimport \"../assets/saved.css\";\r\n\r\nfunction SavedComp() {\r\n    return(\r\n\r\n        <div className=\"row savedBox\">\r\n            <div className=\"col-12\">\r\n                <h6>HEY</h6>\r\n                <ResultCard />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default SavedComp;","import React from \"react\";\r\nimport SavedComp from \"../components/SavedComp\";\r\n\r\n\r\nfunction Saved() {\r\n\r\n    return (\r\n        <SavedComp />\r\n    )\r\n\r\n}\r\n\r\nexport default Saved;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navigation from \"./components/Navigation\";\nimport Banner from \"./components/Banner\";\n\nimport Search from \"./pages/Search\"\nimport Saved from \"./pages/Saved\";\n\n\n\nfunction App() {\n\n\n  return (\n    <React.Fragment>\n      <Router>\n        <Navigation />\n        <div className=\"container\">\n        <Banner />\n          <Switch>\n\n            <Route exact path=\"/search\">\n              <Search />\n            </Route>\n\n            <Route exact path=\"/saved\">\n              <Saved />\n            </Route>\n\n            <Route path=\"/\">\n              <Search />\n            </Route>\n\n          </Switch>\n        </div>\n      \n      </Router>\n    </React.Fragment>\n  );\n}\n\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}